##########################################################################
#  This file is used to create a reverse proxy for the purpose of deferring
#  the binding of the tcp port. DO NOT EDIT THIS FILE.
#
#  You probably want the file at:
#  $(passenger-config about resourcesdir)/templates/standalone/config.erb
#
#  Learn more about using the Nginx configuration template at:
#  https://www.phusionpassenger.com/library/config/standalone/intro.html#nginx-configuration-template
#
##############################################################

<%= include_passenger_internal_template('global.erb') %>

worker_processes 1;
events {
    worker_connections 4096;
}

http {
    log_format debug '[$time_local] $msec  "$request" $status conn=$connection sent=$bytes_sent body_sent=$body_bytes_sent';
    include '<%= PhusionPassenger.resources_dir %>/mime.types';

    <%= nginx_http_option(:socket_backlog) %>
    <%= nginx_http_option(:data_buffer_dir) %>
    <%= nginx_http_option(:core_file_descriptor_ulimit) %>

    default_type application/octet-stream;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    client_max_body_size 1024m;
    access_log off;
    keepalive_timeout 60;
    underscores_in_headers on;
    gzip on;
    gzip_comp_level 3;
    gzip_min_length 150;
    gzip_proxied any;
    gzip_types text/plain text/css text/json text/javascript
        application/javascript application/x-javascript application/json
        application/rss+xml application/vnd.ms-fontobject application/x-font-ttf
        application/xml font/opentype image/svg+xml text/xml;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    <% for app in @apps %>
        <%
            app = app.clone
            app[:upstream] = app[:socket_file]
            app.delete :socket_file
            app.delete :defer_port_binding
        %>
        server {
            server_name <%= app[:server_names].join(' ') %>;
            <% if app[:ssl] %>
                <% if app[:ssl_port] %>
                    listen <%= nginx_listen_address(app) %>;
                    listen <%= nginx_listen_address_with_ssl_port(app) %> ssl;
                <% else %>
                    listen <%= nginx_listen_address(app) %> ssl;
                <% end %>
                ssl_certificate <%= app[:ssl_certificate] %>;
                ssl_certificate_key <%= app[:ssl_certificate_key] %>;
            <% else %>
                listen <%= nginx_listen_address(app) %>;
            <% end %>
            location / {
                proxy_pass http://unix:<%= app[:upstream] %>:;
                proxy_buffering off;
                proxy_redirect default;
                proxy_http_version 1.1;

                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
            }
        }
    <% end %>
}
